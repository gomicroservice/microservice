# Wir planen zwei Profile: local und docker.
#
# FÃ¼r die Entwicklung wollen wir nicht immer alles in Docker oder sonstwo
# deployen, sondern einfach nur starten. Daher ist local das Default-Profil.
spring.profiles.active=local

primes.strategy=AllCandidatesPrimesComputer

# Service-URL des Eureka
eureka.client.serviceUrl.defaultZone=http://${service-registry.server.hostname}:8761/eureka/
# Eureka soll uns in URLs die IP-Adresse, nicht den Hostnamen, liefern.
eureka.client.instance.preferIpAddress=true
# Default 40
eureka.client.initial-instance-info-replication-interval-seconds=10
# Default 30
eureka.client.instance-info-replication-interval-seconds=5
# Default 30
eureka.client.registry-fetch-interval-seconds=5

# Port unterschiedlich je nach Profil
eureka.instance.nonSecurePort=${server.port}
# Default 30 Sends every {} seconds a heartbeat
eureka.instance.lease-renewal-interval-in-seconds=5
# Default 90 When no heartbeat received, after {} seconds the service will be removed.
eureka.instance.lease-expiration-duration-in-seconds=15
# Default /info
eureka.instance.status-page-url-path=/health